from math import *
import sys
ds=600
sf=4.0
t=4.0*60/120
p={'C':0,'c':1,'D':2,'d':3,'E':4,'F':5,'f':6,'G':7,'g':8,'A':9,'a':10,'B':11}
def freq(a):
	return 55*pow(2,a/12.0)
def parse(a):
	return p[a[0]]+(int(a[1])-1)*12
def f2s(a):
	return a*sf
def lim(a,l):
	if(a<=l):
		return a
	else:
		return l
notes=[
['G3',1.0/8.0],
['A3',1.0/8.0],
#['C4',1.0/8.0],
['C4',1.0/8.0],#
['D4',1.0/4.0],
['C4',1.0/8.0],
['D4',1.0/8.0],
['E4',1.0/4.0],
['C4',1.0/8.0],
['A3',1.0/8.0],#
['G3',1.0/8.0],
['E3',1.0/8.0],
['C4',1.0/8.0],
['D4',1.0/8.0],
['A3',1.0/4.0],
['A3',1.0/8.0],
['C4',1.0/8.0],#
['D4',1.0/4.0],
['C4',1.0/8.0],
['D4',1.0/8.0],
['E4',1.0/4.0],
['G4',1.0/8.0],
['A4',1.0/8.0],#
['C5',1.0/8.0],
['B4',1.0/8.0],
['A4',1.0/8.0],
['G4',1.0/8.0],
['A4',1.0/4.0],
['G4',1.0/8.0],
['E4',1.0/8.0],#
['D4',1.0/4.0],
['E4',1.0/8.0],
['C4',1.0/8.0],
['D4',1.0/4.0],
['C4',1.0/8.0],
['D4',1.0/8.0],#
['E4',3.0/16.0],
['A3',1.0/16.0],
['C4',1.0/16.0],
['D4',1.0/16.0],
['A3',1.0/4.0],
['A3',1.0/8.0],
['G3',1.0/8.0],#
['A3',1.0/4.0],
['C4',1.0/8.0],
['D4',1.0/8.0],
['E4',1.0/8.0],
['D4',1.0/8.0],
['G4',1.0/8.0],#9
['A3',1.0/2.0],
['E3',1.0/8.0],
['G3',1.0/8.0],
['A3',1.0/8.0],
['C4',1.0/8.0],#10
['D4',1.0/4.0],
['C4',1.0/8.0],
['D4',1.0/8.0],
['E4',1.0/4.0],
['C4',1.0/8.0],
['A3',1.0/8.0],#11
['G3',1.0/8.0],
['E3',1.0/8.0],
['C4',1.0/8.0],
['D4',1.0/8.0],
['A3',1.0/4.0],
['A3',1.0/8.0],
['C4',1.0/8.0],#12
['D4',1.0/4.0],
['C4',1.0/8.0],
['D4',1.0/8.0],
['E4',1.0/4.0],
['G4',1.0/8.0],
['A4',1.0/8.0],#13
['C5',1.0/8.0],
['B4',1.0/8.0],
['A4',1.0/8.0],
['G4',1.0/8.0],
['A4',1.0/4.0],
['G4',1.0/8.0],
['E4',1.0/8.0],#14
['D4',1.0/4.0],
['E4',1.0/8.0],
['C4',1.0/8.0],
['D4',1.0/4.0],
['C4',1.0/8.0],
['D4',1.0/8.0],#15
['E4',3.0/16.0],
['A3',1.0/16.0],
['C4',1.0/16.0],
['D4',1.0/16.0],
['C4',1.0/8.0],
['A3',1.0/4.0],
['A3',1.0/8.0],
['G3',1.0/8.0],#16
['A3',1.0/4.0],
['C4',1.0/8.0],
['D4',1.0/8.0],
['E4',1.0/8.0],
['D4',1.0/8.0],
['G4',1.0/4.0],#17
['A4',1.0/2.0],
['E3',1.0/8.0],
['G3',1.0/8.0],
['A3',1.0/8.0],
['E4',1.0/8.0],#
['G4',1.0/8.0],
['A4',1.0/8.0],
['E4',1.0/8.0],
['D4',1.0/8.0],
['E4',1.0/4.0],
['C4',1.0/8.0],
['D4',1.0/8.0],#19
['B3',1.0/8.0],
['C4',1.0/8.0],
['B3',1.0/8.0],
['G3',1.0/8.0],
['A3',1.0/4.0],
['E3',1.0/8.0],
['G3',1.0/8.0],#20
['A3',1.0/8.0],
['C4',1.0/8.0],
['D4',1.0/8.0],
['C4',1.0/8.0],
['D4',3.0/16.0],
['C4',1.0/16.0],
['D4',1.0/16.0],
['E4',1.0/16.0],
['C4',1.0/8.0],#21
['D4',3.0/16.0],
['C4',1.0/16.0],
['D4',1.0/8.0],
['E4',1.0/8.0],
['E4',1.0/4.0],
['G4',1.0/8.0],#22
['G4',1.0/4.0],
['G4',1.0/8.0],
['A3',1.0/8.0],
['E4',3.0/8.0],
['C4',1.0/8.0],#23
['D4',1.0/8.0],
['E4',1.0/8.0],
['D4',1.0/8.0],
['C4',1.0/8.0],
['A3',1.0/4.0],
['A3',1.0/8.0],
['G3',1.0/8.0],#24
['A3',3.0/16.0],
['G3',1.0/16.0],
['C4',1.0/8.0],
['D4',1.0/8.0],
['E4',1.0/8.0],
['D4',1.0/8.0],
['G4',1.0/8.0],
['D4',1.0/4.0],#
['A3',1.0/2.0]
]
xx=0
yy=0
ee=0
x=0
y=0
e=0
xd=0
yd=0
ed=0
ii=0
lnt=0
ttt=0
import re
f=open(sys.argv[1],"r")
tt=1
pattern = re.compile(r"^G[01](?: F[\d\.]+)? X([\d\.]+) Y([\d\.]+)(?: E([\d\.]+))?(?:(?!Z).)*$")
while(tt):
	tt=f.readline()
	
	match = pattern.match(tt)
	if match:
		#print(match.groups())
		x=xx
		y=yy
		e=ee
		xx=float(match.groups()[0])
		yy=float(match.groups()[1])
		if(match.groups()[2]):
			ee=float(match.groups()[2])
		else:
			ee=e
		dx=xx-x
		dy=yy-y
		de=ee-e
		if(abs(dy)>=abs(dx)):
			ll=dy
		else:
			ll=dx
		if(ll>0):
			lh=1
		else:
			lh=-1
		ll=abs(ll)
		print ";d"
		while(ll>0.001):
			#print dx,dy,de 
			i=notes[ii%len(notes)]
			s=f2s(freq(parse(i[0])))
			ss=s/60
			#print ss,i[1],t
			if(lnt<=0.001):
				ii+=1
				i=notes[ii%len(notes)]
				s=f2s(freq(parse(i[0])))
				ss=s/60
				lnt=ss*i[1]*t
				ttt+=t*i[1]
			if(ll>lnt):
				dl=lnt
				#ii+=1
			else:
				dl=ll
			ll-=dl
			lnt-=dl
			if(abs(dy)>=abs(dx)):
				sss=s*sqrt(pow(dx,2)+pow(dy,2))/abs(dy)
				ddx=dl*dx*lh/dy
				ddy=dl*lh
				dde=dl*de/abs(dy)
			else:
				sss=s*sqrt(pow(dx,2)+pow(dy,2))/abs(dx)
				ddx=dl*lh
				ddy=dl*dy*lh/dx
				dde=dl*de/abs(dx)
			x=x+ddx
			y=y+ddy
			e=e+dde
			print 'G1 F'+str(int(sss))+' X'+str(round(x,3))+' Y'+str(round(y,3))+' E'+str(round(e,3))
			
	else:
		print tt
print ';'+str(ttt)
